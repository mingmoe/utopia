//===-------------------- config.hpp ---------------------===//
//
// this file is under the MIT License
// See https://opensource.org/licenses/MIT for license information.
// Copyright(c) 2020-2022 moe-org All rights reserved.
//
//===-----------------------------------------------------===//
// this file is generated by CMake
// source path:@this_file_is_source@

#pragma once

namespace utopia {

    struct Version {
        Version()  = delete;
        ~Version() = delete;

        static auto get_major() -> int {
            return   // @UC_PROJECT_VERSION_MAJOR@
                ;
        }

        static auto get_minor() -> int {
            return   // @UC_PROJECT_VERSION_MINOR@
                ;
        }

        static auto get_patch() -> int {
            return   // @UC_PROJECT_VERSION_PATCH@
                ;
        }

        static auto get_build_number() -> unsigned long long {
            return   // @UC_PROJECT_VERSION_BUILD@
                ;
        }
    };

    enum class CXXCompiler : int {
        GCC,
        CLANG,
        MSVC
    };

    struct CompilationInfo {
        CompilationInfo()  = delete;
        ~CompilationInfo() = delete;

        static constexpr auto get_compiler() -> CXXCompiler {
#if defined(__GNUG__)
            return CXXCompiler::GCC;
#elif defined(__clang__)
            return CXXCompiler::CLANG;
#elif(_MSC_VER)
            return CXXCompiler::MSVC;
#else
    #error unknown compiler
#endif
        }

        static constexpr auto get_compiler_major() -> int {
            return   // @UC_CXXCOMPILER_VERSION_MAJOR@
                ;
        }

        static constexpr auto get_compiler_minor() -> int {
            return   // @UC_CXXCOMPILER_VERSION_MINOR@
                ;
        }

        static constexpr auto get_compiler_patch() -> int {
            return   // @UC_CXXCOMPILER_VERSION_PATCH@
                ;
        }

        /**
         * @brief 
         * equal to _MSC_BUILD macro. other compilers return 0.
         */
        static constexpr auto get_compiler_build() -> int {
            return   // @UC_CXXCOMPILER_VERSION_BUILD@
                ;
        }
    };


}   // namespace utopia
